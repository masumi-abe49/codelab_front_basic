$(function() {
  // 例題：h3タグを選択し、文字の色を赤色に変えてください。
  $("h3").css("color", "red");

  //参考URL：http://www.jquerystudy.info/reference/index.html

  // 問題1:タイプセレクター
  // h4タグを選択し、文字の色を赤色に変えてください。
  $("h4").css("color", "red");
  // 問題2:IDセレクター
  // id属性「q2」を選択し、文字の色を赤色に変えてください。
  $('#q2').css('color', 'red');
  // 問題3:クラスセレクター
  // クラス属性「q3」を選択し、文字の色を赤色に変えてください。
  $('.q3').css('color', 'red');
  // 問題4:子孫セレクター
  // 子孫セレクターを使い、spanタグ内の文字の色を赤色に変えてください。
  $('.q4 span').css('color', 'red');
  // 問題5:グループセレクター
  // グループセレクターを使い、id属性「q50」「q51」「q52」のspanタグ内の文字の色を赤色に変えてください。
  $('#q50 span, #q51 span, #q52 span').css('color', 'red');
  // 問題6:子セレクター
  // 子セレクターを使い、spanタグ内の文字の色を赤色に変えてください。
  $('.q6 > span').css('color', 'red');
  // 問題7:隣接セレクター
  // 隣接セレクターを使い、クラス属性item2の文字の色を赤色に変えてください。
  $('.q7 + li').css('color', 'red');
  // 問題8:first-child疑似クラス
  // 疑似クラスを使い、クラス属性「q8」の最初の要素の文字の色を赤色に変えてください。
  $('.q8:first-child').css('color', 'red');
  // 問題9:間接セレクター
  // 間接セレクターを使い、クラス属性「q9」より後にあるp要素の文字の色を赤色に変えてください。
  $('.q9 ~ p').css('color', 'red');
  // 問題10:否定疑似クラス
  // クラス属性「q10」のli要素において、最初以外の要素の文字の色を赤色に変えてください。
  $('.q10 li:not(:eq(0))').css('color', 'red');
  // 問題11:疑似クラス empty
  // 疑似クラスemptyを使い、li要素が空の時、リストの中点の色を赤色に変えてください。
  //
  $('.q11 li:empty').css({　
    listStyle: 'disc', //プロパティはキャメルケース
    color: 'red'
  });

  // ↑↑は下記の記述を連想配列として記載していることと同じ
  // $('.q11 li:empty').css('list-style', 'disc');
  // $('.q11 li:empty').css('color', 'red');

  //*****************************

  // 問題12:疑似クラス nth-child
  // 疑似クラスnth-childを使い、li要素の2番目の、リストの文字の色を赤色に変えてください。
  $('.q12 li:nth-child(2)').css('color', 'red');
  // 問題13:疑似クラス last-child
  // 疑似クラスlast-childを使い、li要素の最後のみ、リストの文字の色を赤色に変えてください。
  $('.q13 li:last-child').css('color', 'red');
  // 問題14:疑似クラス only-child
  // 疑似クラスonly-childを使い、span要素のみ、リストの文字の色を赤色に変えてください。
  $('.q14 li span:only-child').css('color', 'red');
  // 問題15:疑似クラス nth-last-child
  // 疑似クラスnth-last-childを使い、後ろから数えて2番目の、リストの文字の色を赤色に変えてください。
  $('.q15 li:nth-last-child(2)').css('color', 'red');
  // 問題16:疑似クラス nth-of-type
  // 疑似クラスnth-of-typeを使い、dd要素のみ、文字の色を赤色に変えてください。
  $('.q16 dd:nth-of-type(n)').css('color', 'red');
  // 問題17:疑似クラス nth-last-of-type
  // 疑似クラスnth-last-of-typeを使い、後ろから数えて2番目の、dd要素の文字の色を赤色に変えてください。
  $('.q17 dd:nth-last-of-type(2)').css('color', 'red');
  // 問題18:疑似クラス first-of-type
  // 疑似クラスfirst-of-typeを使い、最初のdd要素のみ文字の色を赤色に変えてください。
  $('.q18 dd:first-of-type').css('color', 'red');
  // 問題19:疑似クラス last-of-type
  // 疑似クラスlast-of-typeを使い、最後のdd要素のみ文字の色を赤色に変えてください。
  $('.q19 dd:last-of-type').css('color', 'red');
  // 問題20:疑似クラス　only-of-type
  // 疑似クラスonly-of-typeを使い、dt要素のみ文字の色を赤色に変えてください。
  $('.q20 dt:only-of-type').css('color', 'red');
  // 問題21:特定の属性
  // id属性を持つ要素の位、文字の色を赤色に変えてください。
  $('.q21 li[id]').css('color', 'red');
  // 問題22:特定の属性値
  // クラス属性値が「q22item」を持つ要素の文字の色を赤色に変えてください。
  $('.q22 li[class = q22item]').css('color', 'red');
  // 問題23:特定の属性値を持たない
  // クラス属性値が「q23item」を持たない要素の文字の色を赤色に変えてください。
  $('.q23 li[class != q23item]').css('color', 'red');
  // 問題24:特定の属性値で始まっている
  // クラス属性値が「t」で始まっている要素の文字の色を赤色に変えてください。
  $('.q24 li[class ^= t]').css('color', 'red');
  // 問題25:特定の属性値で終わっている
  // クラス属性値が「e」で終わっている要素の文字の色を赤色に変えてください。
  $('.q25 li[class $= e]').css('color', 'red');
  // 問題26:特定の属性値を含んでいる
  // クラス属性値が「o」を含んでいる要素の文字の色を赤色に変えてください。
  $('.q26 li[class *= o]').css('color', 'red');
  // 問題27:複数の属性セレクターに該当する
  // クラス属性値が「o」「t」両方を含んでいる要素の文字の色を赤色に変えてください。
  $('.q27 li[class *= o][class *= t]').css('color', 'red');
  // 問題28:firstセレクター
  // firstセレクターを使い、一番最初のli要素の文字の色を赤色に変えてください。
  // 補足：first-childだと2つ変更されてしまいます。
  $('.q28 li:first').css('color', 'red');
  // 問題29:lastセレクター
  // lastセレクターを使い、一番最後のli要素の文字の色を赤色に変えてください。
  // 補足：last-childだと2つ変更されてしまいます。
  $('.q29 li:last').css('color', 'red');
  // 問題30:evenセレクター
  // evenセレクターを使い、偶数番目のli要素の文字の色を赤色に変えてください。
  $('.q30 li:even').css('color', 'red'); // 0から始まり、0は偶数と見なされる
  // 問題31:oddセレクター
  // oddセレクターを使い、奇数番目のli要素の文字の色を赤色に変えてください。
  $('.q31 li:odd').css('color', 'red'); // 0から始まる
  // 問題32:eqセレクター
  // eqセレクターを使い、3番目のli要素の文字の色を赤色に変えてください。
  $('.q32 li:eq(2)').css('color', 'red');　// 0から始まるため、3番目は0,1,2の2
  // 問題33:ltセレクター
  // ltセレクターを使い、li要素の1番目と2番目の文字の色を赤色に変えてください。
  $('.q33 li:lt(2)').css('color', 'red'); // :lt(n)は、nを含まないn未満の要素を選択

  // 問題34:gtセレクター
  // gtセレクターを使い、最後のli要素の文字の色を赤色に変えてください。
  $('.q34 li:gt(2)').css('color', 'red'); // :lt(n)は、nを含まないn+1以上の要素を選択

  // 問題35:headerセレクター
  // headerセレクターを使い、heading要素をまとめて選択変えてください。
  $('.q35 :header').css('color', 'red'); 
    // ＜ （半角スペース）＞を入力することで親要素に対する子要素全てに対する選択となる。なので、q35の子要素であるheading要素（h1,h5）を選択する。　:headerセレクターはheading要素全てを選択。

  // 問題36:containsセレクター
  // containsセレクターを使い、テキストに「jQuery」が含まれるli要素の文字の色を赤色に変えてください。
  $('.q36 li:contains(jQuery)').css('color', 'red');
  // 問題37:hasセレクター
  // hasセレクターを使い、span要素を持つli要素の文字の色を赤色に変えてください。
  $('.q37 li:has(span)').css('color', 'red');
  // 問題38:parentセレクター
  // parentセレクターを使い、何らかの子要素が含まれるli要素の文字の色を赤色に変えてください。
  $('.q38 li:parent').css('color', 'red'); // :（コロン）に続けてparentを設定すると子要素またはテキストを持っている要素を選択

  // 問題39:childrenメソッド
  // childrenメソッドを使い、クラスq39の直下のa要素のみ文字の色を赤色に変えてください。
  $('.q39').children('a').css('color', 'red');

  // $('.q39 p').children('a').css('color', 'red');とすると、孫要素aのみ赤くできた。

  // 問題40:findメソッド
  // findメソッドを使い、クラスq40より下にあるa要素の文字の色を赤色に変えてください。2箇所色が変われば正解。
  // 補足：childrenメソッドは直下の子要素を取得する。findメソッドは子孫要素を取得する
  $('.q40').find('a').css('color', 'red');
    // childrenメソッドの仲間で、childrenメソッドと異なり子要素だけでなく、子孫要素まで選択します。調査範囲が広い分childrenメソッドよりも負荷がかかります。子要素しか選択しない場合はchildrenメソッドを利用
    // 参考URL：http://www.jquerystudy.info/reference/traversing/find.html

  // 問題41:prevメソッド
  // prevメソッドを使い、クラスpre-itemの前のli要素の文字の色を赤色に変えてください。
  $('.q41 li.pre-item').prev().css('color', 'red');
    // jQueryオブジェクトで指定した要素の兄弟要素（同じ階層の要素）で「前の要素だけ」を選択。引数を設定することで選択する要素を絞ることができる

  // 問題42:parentsメソッド
  // parentsメソッドを使い、クラスq42itemの親要素クラスq42を取得し、背景色を赤色に変えてください。
  $('.q42item').parents('.q42').css('background-color', 'red');

    // jQueryオブジェクトで指定した要素の「先祖」要素でセレクタにマッチする要素をすべて選択します。引数のセレクタは省略可能で、省略した場合は先祖要素がすべて選択される。
    //名前が似ているparentメソッドはparentsメソッドと異なり「親」要素だけを選択する。parentsメソッドは調査範囲が広い分、parentメソッドよりも負荷がかかる。親要素しか選択しない場合はparentメソッドを利用。

  // 問題43:nextメソッド
  // nextメソッドを使い、クラスq43の兄弟要素の次の要素の文字の色を赤色に変えてください。
  $('.q43').next().css('color', 'red');

    // jQueryオブジェクトで指定した要素の兄弟要素（同じ階層の要素）で「次の要素だけ」を選択します。引数のセレクタを設定することで選択する要素を絞ることができます。

  // 問題44:siblingsメソッド
  // siblingsメソッドを使い、クラスsecound以外の要素の文字の色を赤色に変えてください。
  $('.q44 li.secound').siblings().css('color', 'red');
    // jQueryオブジェクトで指定した要素の兄弟要素（同じ階層の要素）でセレクタにマッチする要素を選択します。引数を設定しない場合はすべての兄弟要素を選択します。
    // 結果として、buttonをクリックするとtestのクラス属性が付いたli要素の兄弟要素の背景色が赤くなります。
    //jQueryオブジェクトで指定したtestのクラス属性を持つli要素は選択されないことに注意してください。また、別のul要素にあるli要素は選択されません。兄弟要素とは同じ階層の要素だけです（下のul要素のli要素達は兄弟ではなく「いとこ」になります）。

  // 問題45:attrメソッド
  // attrメソッドを使い、a要素のhref属性を、https://codelabo.net/に書き換えてください。
  $('.q45 a').attr('href', 'https://codelabo.net/');

  // 問題46:dataメソッド、textメソッド
  // dataメソッドを使い、クラスq46のカスタム属性numの値を取得し、変数に代入してください。
  // またtextメソッドを使い、変数をクラスq46内のテキストに表示してください。
  let num = $('.q46').data('num'); // data-num プロパティの値を取得するのにnumだけで取得する。
  $('.q46').text(num);

    // jQueryオブジェクトで指定した要素にデータ（プロパティ名と値）を設定します。v1.4.3から引数にobjectオブジェクトを設定して、複数のデータをまとめて設定できるようになりました。

    // 引数にプロパティだけ指定すると、jQueryオブジェクトで指定した要素に設定されたプロパティの値を取得します。引数を設定しないと要素に設定された全てのデータをobjectオブジェクトとして取得します。
    // 属性をデータとして扱うためには、要素内の属性の名前を「data-」と始める必要があり、「data-」に続く名前が＜プロパティ名＞となります。つまり上記のdiv要素にはnumプロパティに値「3」が設定されていることになる。
    //p要素のタグ（q46クラス）に設定されたnumプロパティの値「3」がp要素内に表示されます。

  // 問題47:prependメソッド
  // prependメソッドを使い、<p>追加テキストテキスト</p> をクラスq47内の最初に表示してください。
  $('.q47').prepend('<p>追加テキストテキスト</p>');

    // jQueryオブジェクトで指定した要素内（子要素）の先頭に、引数で指定したコンテンツを追加します。コンテンツには文字の他、html要素やDOM要素、jQueryオブジェクトが設定できます。また第2引数「コンテンツ2」を設定することで複数のコンテンツを追加することができます。

    // ver1.4からは引数にfunctionを指定することも可能で、条件によって追加する内容を変更するなど高度な処理にも対応できます。

  // 問題48:要素を最後に挿入 appendメソッド
  // appendメソッドを使い、<p>追加テキストテキスト</p> をクラスq48内の最後に表示してください。
  $('.q48').append('<p>追加テキストテキスト</p>'); // 要素内（子要素）の最後に追加するのはappendメソッド、先頭に追加するのはprependメソッド

  // 問題49：要素の置き換え replaceWithメソッド
  // replaceWithメソッドを使い、クラスq49のp要素を　<h2>置き換え後</h2>に書き換えてください。
  $('.q49').replaceWith('<h2>置き換え後</h2>'); // 引数にはHTMLやfunctionが書ける模様。

    // jQueryオブジェクトで指定した要素と引数で指定したhtml要素を置き換え。html要素がすでにhtml上に存在している場合は、指定した対象がhtml要素に上書きされるような結果になる

  // 問題50：要素の削除 removeメソッド
  // removeメソッドを使い、クラスq50のp要素を削除してください。
  $('.q50 p').remove(); //削除したい要素を選択する

  // 問題51：クラス属性の追加 addClassメソッド
  // addClassメソッドを使い、クラスq51のp要素にクラスredを追加してください。
  $('.q51 p').addClass('red');
  // 問題52：クラス属性の削除 removelassメソッド
  // removeClassメソッドを使い、クラスq52のp要素のクラスredを削除してください。
  $('.q52 p').removeClass('red');
  // 問題53：メソッドチェーン
  // 以下の2行のコードをメソッドチェーンを使い、1行にまとめてください。
  // $(".q53 p").addClass("red");
  // $(".q53 p").append("<span>追加テキスト</span>");
  $('.q53 p').addClass("red").append("<span>追加テキスト</span>");
  // 問題54：イベント click
  // ボタンをクリックしたとき、クラスq54内の最後に<p>追加テキストテキスト</p>を追加してください。
  $('.q54 button').on('click', function(e) {
    $('.q54').append('<p>追加テキストテキスト</p>');
  });
  // onメソッドについては以下を参照
  // https://qiita.com/shizuma/items/d561f37f864c3ebb5096


});